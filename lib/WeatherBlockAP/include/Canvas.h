#ifndef CANVAS_H
#define CANVAS_H

#include <Arduino.h>
#include "Elements.h"

#define SUBCANVAS_OFFSET 24
#define SUBCANVAS_OFFSET_LIMIT 48

enum CanvasType {
  Default,
  API,
  Clock
};

class Canvas {

  std::vector<Elements::Text *> elements;

protected:
  
  int subCanvasOffset = 0;

public:

  Canvas() {}

  virtual CanvasType type() { return CanvasType::Default; };

  // refresh elements generated by API data
  virtual void update();

  virtual void draw(LEDController * controller);

  void incrementSubCanvasOffset();

  virtual void resetSubCanvasOffset();

  void addElement(Elements::Text * e);

  void resetElements();

  std::vector<Elements::Text *> getElements();

  String getElementsString();

  void setElements(char * content);
};

#endif
